/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package builder;

import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;
import static org.junit.jupiter.api.Assertions.assertInstanceOf;

import java.lang.reflect.Method;

import org.junit.jupiter.api.Test;

import builder.builder.AbstractUserBuilder;
import builder.model.User;

class UserBuilderTest {

    @Test
    void doit_AvoirUneMethodePourRecuperer_User() throws NoSuchMethodException, SecurityException {
        Method declaredMethod = AbstractUserBuilder.class.getDeclaredMethod("get");
        assertInstanceOf(User.class.getClass(), declaredMethod.getReturnType());
    }

    @Test
    void doit_AvoirUneMethodePourRecupererUnUtilisateur() {
        assertDoesNotThrow(() -> AbstractUserBuilder.class.getDeclaredMethod("get"));
    }

    @Test
    void doit_AvoirUneMethodePourCreerUn_User() throws SecurityException, NoSuchMethodException {
        assertDoesNotThrow(() -> AbstractUserBuilder.class.getDeclaredMethod("build"));
    }

    @Test
    void doit_AvoirUnBuilderPour_balance() throws SecurityException, NoSuchMethodException {
        assertDoesNotThrow(() -> AbstractUserBuilder.class.getDeclaredMethod("buildBalance"));
    }

    @Test
    void doiAvoirUnBuilderPour_picture() {
        assertDoesNotThrow(() -> AbstractUserBuilder.class.getDeclaredMethod("buildPicture"));
    }

    @Test
    void doiAvoirUnBuilderPour_age() {
        assertDoesNotThrow(() -> AbstractUserBuilder.class.getDeclaredMethod("buildAge"));
    }

    @Test
    void doiAvoirUnBuilderPour_name() {
        assertDoesNotThrow(() -> AbstractUserBuilder.class.getDeclaredMethod("buildName"));
    }

    @Test
    void doiAvoirUnBuilderPour_gender() {
        assertDoesNotThrow(() -> AbstractUserBuilder.class.getDeclaredMethod("buildGender"));
    }

    @Test
    void doiAvoirUnBuilderPour_company() {
        assertDoesNotThrow(() -> AbstractUserBuilder.class.getDeclaredMethod("buildCompany"));
    }

    @Test
    void doiAvoirUnBuilderPour_email() {
        assertDoesNotThrow(() -> AbstractUserBuilder.class.getDeclaredMethod("buildEmail"));
    }
}
use self::ocr::Ocr;

mod ocr;

pub fn parse(data: &str) -> String {
    Ocr::new(data).parse()
}

#[cfg(test)]
mod tests {
    use super::parse;

    /***************
     * SCENARIO: 2 *
     ***************/

    //  account number:  3  4  5  8  8  2  8  6  5
    //  position names:  d9 d8 d7 d6 d5 d4 d3 d2 d1
    //
    //  checksum calculation:
    //  (d1+2*d2+3*d3+...+9*d9) mod 11 = 0

    #[test]
    fn doit_etre_valide_lorsque_3_4_5_8_8_2_8_6_5() {}

    /***************
     * SCENARIO: 1 *
     ***************/

    #[test]
    fn parse_doit_pouvoir_gerer_le_use_case_123456789() {
        assert_eq!("123456789", parse(USE_CASE_123456789));
    }

    #[test]
    fn parse_doit_pouvoir_gerer_le_use_case_999999999() {
        assert_eq!("999999999", parse(USE_CASE_999999999));
    }

    #[test]
    fn parse_doit_pouvoir_gerer_le_use_case_888888888() {
        assert_eq!("888888888", parse(USE_CASE_888888888));
    }

    #[test]
    fn parse_doit_pouvoir_gerer_le_use_case_777777777() {
        assert_eq!("777777777", parse(USE_CASE_777777777));
    }

    #[test]
    fn parse_doit_pouvoir_gerer_le_use_case_666666666() {
        assert_eq!("666666666", parse(USE_CASE_666666666));
    }

    #[test]
    fn parse_doit_pouvoir_gerer_le_use_case_555555555() {
        assert_eq!("555555555", parse(USE_CASE_555555555));
    }

    #[test]
    fn parse_doit_pouvoir_gerer_le_use_case_444444444() {
        assert_eq!("444444444", parse(USE_CASE_444444444));
    }

    #[test]
    fn parse_doit_pouvoir_gerer_le_use_case_333333333() {
        assert_eq!("333333333", parse(USE_CASE_333333333));
    }

    #[test]
    fn parse_doit_pouvoir_gerer_le_use_case_222222222() {
        assert_eq!("222222222", parse(USE_CASE_222222222));
    }

    #[test]
    fn parse_doit_pouvoir_gerer_le_use_case_111111111() {
        assert_eq!("111111111", parse(USE_CASE_111111111));
    }

    #[test]
    fn parse_doit_pouvoir_gerer_le_use_case_000000000() {
        assert_eq!("000000000", parse(USE_CASE_000000000));
    }

    const USE_CASE_000000000: &str = " _  _  _  _  _  _  _  _  _ 
| || || || || || || || || |
|_||_||_||_||_||_||_||_||_|";

    const USE_CASE_111111111: &str = "                           
  |  |  |  |  |  |  |  |  |
  |  |  |  |  |  |  |  |  |";

    const USE_CASE_222222222: &str = " _  _  _  _  _  _  _  _  _ 
 _| _| _| _| _| _| _| _| _|
|_ |_ |_ |_ |_ |_ |_ |_ |_ ";

    const USE_CASE_333333333: &str = " _  _  _  _  _  _  _  _  _ 
 _| _| _| _| _| _| _| _| _|
 _| _| _| _| _| _| _| _| _|";

    const USE_CASE_444444444: &str = "                           
|_||_||_||_||_||_||_||_||_|
  |  |  |  |  |  |  |  |  |";

    const USE_CASE_555555555: &str = " _  _  _  _  _  _  _  _  _ 
|_ |_ |_ |_ |_ |_ |_ |_ |_ 
 _| _| _| _| _| _| _| _| _|";

    const USE_CASE_666666666: &str = " _  _  _  _  _  _  _  _  _ 
|_ |_ |_ |_ |_ |_ |_ |_ |_ 
|_||_||_||_||_||_||_||_||_|";

    const USE_CASE_777777777: &str = " _  _  _  _  _  _  _  _  _ 
  |  |  |  |  |  |  |  |  |
  |  |  |  |  |  |  |  |  |";

    const USE_CASE_888888888: &str = " _  _  _  _  _  _  _  _  _ 
|_||_||_||_||_||_||_||_||_|
|_||_||_||_||_||_||_||_||_|";

    const USE_CASE_999999999: &str = " _  _  _  _  _  _  _  _  _ 
|_||_||_||_||_||_||_||_||_|
 _| _| _| _| _| _| _| _| _|";

    const USE_CASE_123456789: &str = "    _  _     _  _  _  _  _ 
  | _| _||_||_ |_   ||_||_|
  ||_  _|  | _||_|  ||_| _|";

    // use case 3
    //  _  _  _  _  _  _  _  _
    // | || || || || || || ||_   |
    // |_||_||_||_||_||_||_| _|  |
    //
    // => 000000051
    //     _  _  _  _  _  _     _
    // |_||_|| || ||_   |  |  | _
    //   | _||_||_||_|  |  |  | _|
    //
    // => 49006771? ILL
    //     _  _     _  _  _  _  _
    //   | _| _||_| _ |_   ||_||_|
    //   ||_  _|  | _||_|  ||_| _
    //
    // => 1234?678? ILL
    //
    // use case 4
    //
    //   |  |  |  |  |  |  |  |  |
    //   |  |  |  |  |  |  |  |  |
    //
    // => 711111111
    //  _  _  _  _  _  _  _  _  _
    //   |  |  |  |  |  |  |  |  |
    //   |  |  |  |  |  |  |  |  |
    //
    // => 777777177
    //  _  _  _  _  _  _  _  _  _
    //  _|| || || || || || || || |
    // |_ |_||_||_||_||_||_||_||_|
    //
    // => 200800000
    //  _  _  _  _  _  _  _  _  _
    //  _| _| _| _| _| _| _| _| _|
    //  _| _| _| _| _| _| _| _| _|
    //
    // => 333393333
    //  _  _  _  _  _  _  _  _  _
    // |_||_||_||_||_||_||_||_||_|
    // |_||_||_||_||_||_||_||_||_|
    //
    // => 888888888 AMB ['888886888', '888888880', '888888988']
    //  _  _  _  _  _  _  _  _  _
    // |_ |_ |_ |_ |_ |_ |_ |_ |_
    //  _| _| _| _| _| _| _| _| _|
    //
    // => 555555555 AMB ['555655555', '559555555']
    //  _  _  _  _  _  _  _  _  _
    // |_ |_ |_ |_ |_ |_ |_ |_ |_
    // |_||_||_||_||_||_||_||_||_|
    //
    // => 666666666 AMB ['666566666', '686666666']
    //  _  _  _  _  _  _  _  _  _
    // |_||_||_||_||_||_||_||_||_|
    //  _| _| _| _| _| _| _| _| _|
    //
    // => 999999999 AMB ['899999999', '993999999', '999959999']
    //     _  _  _  _  _  _     _
    // |_||_|| || ||_   |  |  ||_
    //   | _||_||_||_|  |  |  | _|
    //
    // => 490067715 AMB ['490067115', '490067719', '490867715']
    //     _  _     _  _  _  _  _
    //  _| _| _||_||_ |_   ||_||_|
    //   ||_  _|  | _||_|  ||_| _|
    //
    // => 123456789
    //  _     _  _  _  _  _  _
    // | || || || || || || ||_   |
    // |_||_||_||_||_||_||_| _|  |
    //
    // => 000000051
    //     _  _  _  _  _  _     _
    // |_||_|| ||_||_   |  |  | _
    //   | _||_||_||_|  |  |  | _|
    //
    // => 490867715
}

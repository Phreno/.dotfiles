/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package game.life;

import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

import org.junit.jupiter.api.Test;

class LifeTest {

    @Test
    void doit_AvoirUnAttribut_isAlive() {
        assertDoesNotThrow(() -> Life.class.getDeclaredField("state"));
    }

    @Test
    void isAlive_EstFauxParDefault() {
        // given
        // when
        Life life = new Life();
        // then
        assertFalse(life.isAlive());
    }

    @Test
    void doit_AvoirUneFonctionPourActiver() {
        assertDoesNotThrow(() -> Life.class.getDeclaredMethod("wakeUp"));
    }

    @Test
    void wakeUp_doitActiverLaCellule() {
        // given
        Life life = new Life();
        // when
        life.wakeUp();
        // then
        assertTrue(life.isAlive());
    }

    @Test
    void doit_avoirUneFonctionPourTuer() {
        assertDoesNotThrow(() -> Life.class.getDeclaredMethod("kill"));
    }

    @Test
    void wakeUp_doitTuerLaCellule() {
        // given
        Life life = new Life();
        life.wakeUp();
        // when
        life.kill();
        // then
        assertFalse(life.isAlive());
    }

    @Test
    void doit_avoirUnConstructeurAvecUnChar() {
        assertDoesNotThrow(() -> Life.class.getConstructor(Character.class));
    }

    @Test
    void doit_RetournerUneCelluleVivanteAvec_star() {
        // given
        Life life;
        // when
        life = new Life('*');
        // then
        assertTrue(life.isAlive());
    }

    @Test
    void doit_AvoirUneFonctionPourAfficher() {
        assertDoesNotThrow(() -> Life.class.getDeclaredMethod("toString"));
    }

    @Test
    void toString_DoitRetournerLEtat() {
        Life life = new Life();
        assertEquals(".", life.toString());
        life.wakeUp();
        assertEquals("*", life.toString());
    }
}

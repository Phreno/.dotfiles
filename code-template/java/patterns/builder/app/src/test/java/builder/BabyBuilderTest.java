/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package builder;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertTrue;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import builder.builder.AbstractUserBuilder;
import builder.builder.BabyBuilder;

class BabyBuilderTest {

    BabyBuilder builder;

    @BeforeEach
    void setup() {
        builder = new BabyBuilder();
    }

    @Test
    void doit_InstancierUn_UserBuilder() {
        assertTrue(builder instanceof AbstractUserBuilder);
    }

    @Test
    void doit_RecupererUnUtilisateurNonNullApres_build() {
        // given
        // when
        builder.build();
        // then
        assertNotNull(builder.get());
    }

    @Test
    void doit_RecupererUnUtilisateurNullSans_build() {
        // given
        // when
        // then
        assertNull(builder.get());
    }

    @Test
    void buildCompany_doitInitialiserLaVariableA_EMPTY() {
        // given
        // when
        builder.build();
        builder.buildCompany();
        // then
        assertEquals("", builder.get().getCompany());
    }

    void buildPicture_doitInitialiserLaVariableA_EMPTY() {
        // given
        // when
        builder.build();
        builder.buildCompany();
        // then
        assertEquals("", builder.get().getCompany());
    }

    void buildAge_doitInitialiserLaVariableA_2() {
        // given
        // when
        builder.build();
        builder.buildAge();
        // then
        assertEquals("2", builder.get().getAge());
    }

    void buildName_doitInitialiserLaVariableA_BiBi() {
        // given
        // when
        builder.build();
        builder.buildName();
        // then
        assertEquals("BiBi", builder.get().getName());
    }

    void buildGender_doitInitialiserLaVariableA_h() {
        // given
        // when
        builder.build();
        builder.buildGender();
        // then
        assertEquals("h", builder.get().getGender());
    }

    void buildEmail_doitInitialiserLaVariableA_EMPTY() {
        // given
        // when
        builder.build();
        builder.buildEmail();
        // then
        assertEquals("", builder.get().getEmail());
    }

    void buildBalance_doitInitialiserLaVariableA_EMPTY() {
        // given
        // when
        builder.build();
        builder.buildBalance();
        // then
        assertEquals("", builder.get().getBalance());
    }
}